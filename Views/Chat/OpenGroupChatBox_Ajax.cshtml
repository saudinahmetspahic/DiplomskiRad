@using WebApp.ViewModels.Chat
@model GroupChatListingMessages_VM


<div class="d-flex justify-content-between margin-bottom-20">
    <input hidden value="@Model.GroupChatId" id="GroupChatId" />
    <input hidden value="@Model.UserId" id="UserId" />
    <p class="header-text text-color-black"><i class="fa fa-commenting"></i> @Model.GroupName</p>
    <div class="switch-to-column">
        <button class="btn-light border-0 padding-5" onclick="javascript: LeaveChatGroup('@Model.GroupName', '@Model.UserId');">Leave group</button>
        <button class="btn-info border-0 padding-5" onclick="javascript: AddParticipants('@Model.GroupChatId');">Participants</button>
    </div>
</div>
<div class="flex-column padding-50 h-100 scroll-allow max-height-500" id="messagesDiv">

    @foreach (var i in Model.Messages.OrderBy(o => o.SendingDate))
    {
        <div class="d-block">
            <div class="@(i.SenderId == Model.UserId ? "background-light margin-right-25 div-align-left text-align-left border-radius-left" : "background-dark margin-left-25 div-align-right text-align-right border-radius-right") w-75 d-inline-block margin-5 padding-20 text-color-white">
                <p class="small-text text-color-darkgray">@i.SenderName @i.SendingDate.ToString("dd/MM/yyyy hh:mm dddd")</p>
                <p> @i.MessageContent</p>
            </div>
        </div>
    }



</div>

<div class="d-block">
    <input placeholder="Write your message.." class="w-75 h-100 padding-5" id="messageInput" /> <button class="btn btn-secondary float-right w-25 h-100" onclick="javascript: SendNewMessage('@Model.GroupChatId', '@Model.UserId');" id="sendMessageButton">Send <i class="fa fa-level-up"></i></button>
</div>



<script>
    function LeaveChatGroup(GroupChaName, UserId) {
        $.post("/Chat/RemoveGroupChatParticipant?GroupName=" + GroupChaName + "&UserId=" + UserId, function (result, status) {
            if (status == "success") {
                var h3 = document.createElement("h3");
                h3.className = "text-center d-block padding-20 text-uppercase";
                h3.textContent = "You left this group.";
                $("#messagesDiv").html(h3);
                document.getElementById("messageInput").disabled = true;
                document.getElementById("sendMessageButton").disabled = true;
            }
        });
    }

    function AddParticipants(GroupChatId) {

        var div = document.createElement("div");

        var h5 = document.createElement("h5");
        h5.textContent = "Add new chat participants";
        h5.classList = "text-align-left";

        var input = document.createElement("input");
        input.placeholder = "Search..";
        input.classList = "w-100 padding-5";
        input.addEventListener("input", function () {
            $.get("/Chat/AddGroupChatParticipants?GroupChatId=" + GroupChatId + "&Value=" + input.value, function (result, status) {
                ajaxdiv.innerHTML = result;
            });
        });

        var ajaxdiv = document.createElement("div");
        ajaxdiv.className = "w-100 padding-5 max-height-300 overflow-auto";

        div.appendChild(h5);
        div.appendChild(input);
        div.appendChild(ajaxdiv);

        MakeCustomModal("Participants", div, false, function () { });
    }

    function AddNewGroupParticipant(e, GroupChatId, ParticipantId) {
        $.post("/Chat/AddNewGroupChatParticipant?GroupChatId=" + GroupChatId + "&UserId=" + ParticipantId, function (result, status) {
            if (status == "success") {
                Message("User successfully added to group chat.");
                e.remove();
            }
        });
    }


    //const conn = new signalR.HubConnectionBuilder()
    //    .withUrl("/chatHub/")
    //    .configureLogging(signalR.LogLevel.Information)
    //    .build();

    //document.getElementById("sendMessageButton").disabled = true;

    //conn.on("RemovedFromGroup", function (Group, User) {
    //    alert("Removed -> group=" + Group + " / user=" + User);
    //});
    //conn.on("AddedToGroup", function (Group, User) {
    //    alert("Added -> group=" + Group + " / user=" + User);   //});


    connection.on("RecieveMessage", function (Group, Sender, Message) {
        var GroupID = $("#GroupChatId").val();
        if ("Group_" + GroupID != Group) {
            return;
        }

        var div = document.createElement("div");
        div.className = "d-block";

        var div2 =ModeGroupChatIdldocument.createElement("div");
        div2.className = "background-light margin-right-25 div-align-left text-align-left border-radius-left";
        var UserID = $("#UserId").val();
        if (Sender != UserID)
            div2.className = "background-dark margin-left-25 div-align-right text-align-right border-radius-right";
        div2.className += " w-75 d-inline-block margin-5 padding-20 text-color-white";

        var p = document.createElement("p");
        p.className = "small-text text-color-darkgray";
        var today = new Date();
        var day = today.getDay();
        var daylist = ["Sunday", "Monday", "Tuesday", "Wednesday ", "Thursday", "Friday", "Saturday"];
        p.innerHTML = today.getDay() + "/" + today.getMonth() + "/" + today.getFullYear() + " " + today.getHours().toFixed(2) + ":" + today.getMinutes().toFixed(2) + " " + daylist[day];

        var p2 = document.createElement("p");
        p2.innerHTML = Message;

        div2.appendChild(p);
        div2.appendChild(p2);

        div.appendChild(div2);
        var parent = document.getElementById("messagesDiv");
        parent.appendChild(div);
        parent.scrollTop = parent.scrollHeight;
    });

    //conn.start().then(function () {
    //    var GroupID = $("#GroupChatID").val();
    //    //document.getElementById("sendMessageButton").disabled = false;
        
    //}).catch(function (err) {
    //    console.log(err.toString());
    //});

    function SendNewMessage(ChatId, UserId) {
        connection.invoke("AddUserToGroup", "Group_" + ChatId).catch(function (err) {
            console.log(err.toString());
        });

        var messageContent = $("#messageInput").val();
        $.post("/Chat/SendNewGroupMessage?GroupChatId=" + ChatId + "&Message=" + messageContent);
        connection.invoke("SendMessageToGroup", "Group_" + ChatId, UserId, messageContent).catch(function (err) {
            console.log(err.toString());
        });
    }
</script>